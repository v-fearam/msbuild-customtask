// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace myClient.Models
{
    public partial class WeatherForecast
    {
        internal static WeatherForecast DeserializeWeatherForecast(JsonElement element)
        {
            Optional<DateTimeOffset> date = default;
            Optional<int> temperatureC = default;
            Optional<int> temperatureF = default;
            Optional<string> summary = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("date"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    date = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("temperatureC"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    temperatureC = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("temperatureF"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    temperatureF = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("summary"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        summary = null;
                        continue;
                    }
                    summary = property.Value.GetString();
                    continue;
                }
            }
            return new WeatherForecast(Optional.ToNullable(date), Optional.ToNullable(temperatureC), Optional.ToNullable(temperatureF), summary.Value);
        }
    }
}
